
worker_processes  1;
events {
    worker_connections  1024;
}

daemon off;
master_process off;
error_log   logs/error.log  debug;

http {
    include       mime.types;
    server {
        listen       80;
        server_name  localhost;

        # hello world
        location /mruby {
            mruby_content_handler /Users/cuizheng/Documents/ngx_mruby/example/hello.mrb;
        }

        # include mruby-json
        location / {
            mruby_content_handler_code '
                r = Nginx::Request.new()
                r.content_type = "text/html"
                Nginx.rputs "hello ngx_mruby world!<br>"
                Nginx.rputs "content_type: #{r.content_type}<br>"
                Nginx.rputs "ngx_mruby_version: #{Nginx.ngx_mruby_version}<br>"
                Nginx.rputs "nginx_version: #{Nginx.nginx_version}<br>"
                Nginx.errlogger Nginx::NGX_LOG_ERR, "ngx_mruby error!"
                Nginx.return Nginx::NGX_HTTP_OK
            ';
        }

        # headers
        location /headers {
            mruby_content_handler_code '
                r = Nginx::Request.new()
                r.content_type = "text/html"
                Nginx.rputs "headers: #{r.headers}<br><br>"
                Nginx.rputs "header keys: #{r.headers.keys}<br><br>"
                Nginx.rputs "header values: #{r.headers.values}<br><br>"
                Nginx.rputs "user agent: #{r.headers[\'User-Agent\']}<br>"
                Nginx.return Nginx::NGX_HTTP_OK
            ';
        }
    }
}
